<?phpnamespace App\Http\Controllers;use App\Keyword;use Illuminate\Support\Facades\Redis;use League\Flysystem\Exception;class UploadController extends Controller{	private static $fileName = 'keywordSource.xlsx';	public static function guide($fun) {		return call_user_func("self::{$fun}");	}	public static function handleFile() {		$redis = Redis::connection();		$redis->set('total', 0);		$redis->set('exe', 0);		$target_dir = "uploadBin/";		$target_file = $target_dir . basename($_FILES["avatar"]["name"]);		$uploadOk = 1;		$imageFileType = pathinfo($target_file,PATHINFO_EXTENSION);		self::emptyTheDir($target_dir);		$err_message = 'unknown error';		// Check file size		if ($_FILES["avatar"]["size"] > 5000000) {			$err_message =  "抱歉, 您上传的文件超过了5000000B";			$uploadOk = 0;		}		// Allow certain file formats		if($imageFileType != "xlsx") {			$err_message = "抱歉, 仅支持上传xlsx格式的文件";			$uploadOk = 0;		}		// Check if $uploadOk is set to 0 by an error		if ($uploadOk == 0) {			return response()->json(['status' => 'FAIL', 'message' => $err_message]);		// if everything is ok, try to upload file		} else {			$target_file = $target_dir . basename(self::$fileName);			if (move_uploaded_file($_FILES["avatar"]["tmp_name"], $target_file)) {				$addRes = self::addDataToDB(self::transferExcelToArray($target_file));				return response()->json(['status' => 'OK', 'message' => 'upload successfully', 'info'  =>  $addRes]);			} else {				return response()->json(['status' => 'FAIL', 'message' => 'we can\'t receive your file, please contact chenzhaoyang@baixing.com 				for help']);			}		}	}	public static function progress() {		$redis = Redis::connection();		return response()->json([			'percent'   =>  $redis->get('exe') / $redis->get('total') * 100		]);	}	protected static function emptyTheDir ($path) {		array_map('unlink', glob("{$path}*"));	}	protected static function transferExcelToArray($fileLocation) {		$objPHPExcel = \PHPExcel_IOFactory::load($fileLocation);		$objWorksheet = $objPHPExcel->getActiveSheet();		return $objWorksheet->toArray();	}	protected static function addDataToDB($dataArray) {		$redis = Redis::connection();		$redis->set('total', count($dataArray));		$duplicateCount = 0;		$successCount = 0;		foreach ($dataArray as $rowArray) {			$priKey = (string)$rowArray[0];			$keyword = Keyword::find($priKey);			if (is_null($keyword)) {				$keyword = new Keyword();				$keyword->name = $priKey;				$keyword->save();				$successCount ++;			} else {				//duplicate				$duplicateCount++;			}			$redis->set('exe', $redis->get('exe') + 1);		}		return [			'tryCount'      => count($dataArray),			'successCount'  => $successCount,			'duplicateCount'=> $duplicateCount,		];	}}